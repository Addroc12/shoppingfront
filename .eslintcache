[{"E:\\ShoppingApp\\shoppingfront\\src\\index.js":"1","E:\\ShoppingApp\\shoppingfront\\src\\Routes.js":"2","E:\\ShoppingApp\\shoppingfront\\src\\user\\Signup.js":"3","E:\\ShoppingApp\\shoppingfront\\src\\user\\Signin.js":"4","E:\\ShoppingApp\\shoppingfront\\src\\core\\Shop.js":"5","E:\\ShoppingApp\\shoppingfront\\src\\user\\UserDashboard.js":"6","E:\\ShoppingApp\\shoppingfront\\src\\user\\AdminDashboard.js":"7","E:\\ShoppingApp\\shoppingfront\\src\\core\\Home.js":"8","E:\\ShoppingApp\\shoppingfront\\src\\core\\NavBar.js":"9","E:\\ShoppingApp\\shoppingfront\\src\\core\\Product.js":"10","E:\\ShoppingApp\\shoppingfront\\src\\admin\\AddCategory.js":"11","E:\\ShoppingApp\\shoppingfront\\src\\admin\\AddProduct.js":"12","E:\\ShoppingApp\\shoppingfront\\src\\auth\\PrivateRoute.js":"13","E:\\ShoppingApp\\shoppingfront\\src\\auth\\AdminRoute.js":"14","E:\\ShoppingApp\\shoppingfront\\src\\core\\ApiCor.js":"15","E:\\ShoppingApp\\shoppingfront\\src\\core\\FixedPrices.js":"16","E:\\ShoppingApp\\shoppingfront\\src\\core\\Layout.js":"17","E:\\ShoppingApp\\shoppingfront\\src\\core\\CheckBox.js":"18","E:\\ShoppingApp\\shoppingfront\\src\\core\\RadioBox.js":"19","E:\\ShoppingApp\\shoppingfront\\src\\admin\\ApiAdmin.js":"20","E:\\ShoppingApp\\shoppingfront\\src\\core\\Card.js":"21","E:\\ShoppingApp\\shoppingfront\\src\\auth\\index.js":"22","E:\\ShoppingApp\\shoppingfront\\src\\core\\ShowImage.js":"23","E:\\ShoppingApp\\shoppingfront\\src\\core\\Search.js":"24","E:\\ShoppingApp\\shoppingfront\\src\\Config.js":"25","E:\\ShoppingApp\\shoppingfront\\src\\core\\CartHelpers.js":"26","E:\\ShoppingApp\\shoppingfront\\src\\core\\Cart.js":"27","E:\\ShoppingApp\\shoppingfront\\src\\core\\CheckOut.js":"28","E:\\ShoppingApp\\shoppingfront\\src\\admin\\Orders.js":"29","E:\\ShoppingApp\\shoppingfront\\src\\user\\Profile.js":"30","E:\\ShoppingApp\\shoppingfront\\src\\user\\ApiUser.js":"31","E:\\ShoppingApp\\shoppingfront\\src\\admin\\ManageProducts.js":"32","E:\\ShoppingApp\\shoppingfront\\src\\admin\\UpdateProduct.js":"33"},{"size":232,"mtime":1610871413000,"results":"34","hashOfConfig":"35"},{"size":1992,"mtime":1611935334885,"results":"36","hashOfConfig":"35"},{"size":3284,"mtime":1615219133401,"results":"37","hashOfConfig":"35"},{"size":3458,"mtime":1615218118586,"results":"38","hashOfConfig":"35"},{"size":4119,"mtime":1615219189209,"results":"39","hashOfConfig":"35"},{"size":3454,"mtime":1611936588284,"results":"40","hashOfConfig":"35"},{"size":2084,"mtime":1611923622449,"results":"41","hashOfConfig":"35"},{"size":2291,"mtime":1615218405381,"results":"42","hashOfConfig":"35"},{"size":3204,"mtime":1612445500376,"results":"43","hashOfConfig":"35"},{"size":3739,"mtime":1615275698518,"results":"44","hashOfConfig":"35"},{"size":2419,"mtime":1610466083000,"results":"45","hashOfConfig":"35"},{"size":5360,"mtime":1614362738590,"results":"46","hashOfConfig":"35"},{"size":426,"mtime":1610374398000,"results":"47","hashOfConfig":"35"},{"size":458,"mtime":1610374734000,"results":"48","hashOfConfig":"35"},{"size":3345,"mtime":1615200516032,"results":"49","hashOfConfig":"35"},{"size":558,"mtime":1615219723194,"results":"50","hashOfConfig":"35"},{"size":911,"mtime":1615278677328,"results":"51","hashOfConfig":"35"},{"size":1170,"mtime":1610814366000,"results":"52","hashOfConfig":"35"},{"size":625,"mtime":1610819204000,"results":"53","hashOfConfig":"35"},{"size":3987,"mtime":1611937361045,"results":"54","hashOfConfig":"35"},{"size":3557,"mtime":1615201407360,"results":"55","hashOfConfig":"35"},{"size":1594,"mtime":1611329806244,"results":"56","hashOfConfig":"35"},{"size":308,"mtime":1615187460304,"results":"57","hashOfConfig":"35"},{"size":3643,"mtime":1615190437305,"results":"58","hashOfConfig":"35"},{"size":48,"mtime":1609773892000,"results":"59","hashOfConfig":"35"},{"size":2713,"mtime":1611512254409,"results":"60","hashOfConfig":"35"},{"size":1884,"mtime":1615278761699,"results":"61","hashOfConfig":"35"},{"size":6582,"mtime":1615218808629,"results":"62","hashOfConfig":"35"},{"size":5557,"mtime":1611856547582,"results":"63","hashOfConfig":"35"},{"size":3199,"mtime":1611920988387,"results":"64","hashOfConfig":"35"},{"size":1710,"mtime":1611922273699,"results":"65","hashOfConfig":"35"},{"size":2229,"mtime":1611931852080,"results":"66","hashOfConfig":"35"},{"size":6259,"mtime":1611937003717,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1r6vylq",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"71"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"71"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"71"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"71"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"71"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"71"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"71"},"E:\\ShoppingApp\\shoppingfront\\src\\index.js",["160"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route } from 'react-router-dom';\nimport './index.css';\nimport Routes from './Routes'; \n\n\nReactDOM.render(\n    <Routes />,\n  document.getElementById('root')\n);\n \n ",["161","162"],"E:\\ShoppingApp\\shoppingfront\\src\\Routes.js",["163"],"import React from 'react'\r\nimport {BrowserRouter, Switch , Route} from 'react-router-dom'\r\nimport Signup from './user/Signup'\r\nimport Signin from './user/Signin'\r\nimport Home from './core/Home'\r\nimport PrivateRoute from './auth/PrivateRoute'\r\nimport NavBar from './core/NavBar'\r\nimport Dashboard from './user/UserDashboard'\r\nimport AdminRoute from './auth/AdminRoute'\r\nimport AdminDashboard from './user/AdminDashboard'\r\nimport AddCategory from './admin/AddCategory'\r\nimport AddProduct from './admin/AddProduct'\r\nimport Shop from './core/Shop'\r\nimport Product from './core/Product'\r\nimport Cart from './core/Cart'\r\nimport Orders from './admin/Orders'\r\nimport Profile from './user/Profile'\r\nimport ManageProducts from './admin/ManageProducts'\r\nimport UpdateProducts from './admin/UpdateProduct'\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/shop\" exact component={Shop}/>\r\n            <Route path=\"/signin\" exact component={Signin}/>\r\n            <Route path=\"/signup\" exact component={Signup}/>\r\n            <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\r\n            <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\r\n            <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n            <AdminRoute path=\"/create/category\" exact component={AddCategory} />\r\n            <AdminRoute path=\"/create/product\" exact component={AddProduct} />\r\n            <AdminRoute path=\"/admin/orders\" exact component={Orders} />\r\n            <AdminRoute path=\"/admin/products\" exact component={ManageProducts} />\r\n            <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProducts} />\r\n            <Route path=\"/product/:productId\" exact component={Product} />\r\n            <Route path=\"/cart\" exact component={Cart} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n    ) \r\n}\r\n\r\n\r\nexport default Routes","E:\\ShoppingApp\\shoppingfront\\src\\user\\Signup.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\user\\Signin.js",["164"],"import Layout from '../core/Layout'\r\nimport React, {useState} from 'react'\r\nimport {signin, authenicate, isAuthenticate } from '../auth'\r\nimport '../core/NavBar.css'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nconst Signin = () => {\r\n    const [values , setValues] = useState({\r\n        email: 'adityaa@g.com',\r\n        password: 'asaaaa5a',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer:false\r\n    })\r\n\r\n    const {email,password,error,loading,redirectToReferrer} = values\r\n    const {user} = isAuthenticate()\r\n   \r\n    // it is a higher order function which means it returns a function\r\n    const handleChange = name => event => {\r\n        setValues({...values,error:false,[name]:event.target.value})\r\n\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({...values,err:false,loading:true})\r\n       signin({email, password})\r\n       .then(data => {\r\n           if(data.err){\r\n               setValues({...values, error:data.err, loading:false})\r\n\r\n           }else {\r\n              authenicate(\r\n                  data , () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    })\r\n                })\r\n           }\r\n       })\r\n    }\r\n    const signUpForm = () => (\r\n       \r\n        <form style={{marginTop:\"50px\",width:\"200px\"}}>\r\n             <h1 style={{color:\"pink\",marginBottom:\"20px\"}}>Sign In</h1>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n\r\n            <div className=\"form-group c\">\r\n           \r\n                <button onClick={clickSubmit}  style={{borderRadius:\"20px\"}} type=\"submit\" className=\"btn btn-primary form-control  b\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n   \r\n    const showError =() => (\r\n        <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}} >{error}</div>\r\n    )\r\n\r\n    const showLoading =() => (\r\n        loading && (<div className=\"alert alert-info\"><h2>Loading</h2></div>)\r\n    )\r\n    const redirectUser = () => {\r\n        if(redirectToReferrer) {\r\n            if(user && user.role === 1){\r\n                return <Redirect to=\"/admin/Dashboard\"/>\r\n            }else{\r\n                return <Redirect to=\"/\" />\r\n            }\r\n        }\r\n        if(isAuthenticate()){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n           \r\n    }\r\n\r\n    return(\r\n        <Layout title='SignIn' description='Used For Signin' className=\"container col-md-4 offset-md-4\">\r\n            {showLoading()}\r\n            {showError()}\r\n            <div className=\"row\">\r\n                \r\n            <div className=\"col-8\" style={{backgroundColor:\"white\",height:\"400px\",display:\"flex\",justifyContent:\"center\",width:\"600px\",borderRadius:\"20px\",marginTop:\"100px\"}}>\r\n               \r\n                {signUpForm()}\r\n            </div>\r\n            \r\n            </div>\r\n            {redirectUser()}\r\n        \r\n \r\n        </Layout>\r\n    ) \r\n    \r\n}\r\n\r\n    \r\n\r\nexport default Signin","E:\\ShoppingApp\\shoppingfront\\src\\core\\Shop.js",["165","166","167","168","169"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from './Layout'\r\nimport {getProducts, getCategories, getFilteredProduct} from './ApiCor'\r\nimport Card from './Card'\r\nimport CheckBox from './CheckBox'\r\nimport {prices} from './FixedPrices'\r\nimport RadioBox from './RadioBox'\r\nimport './NavBar.css'\r\n\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: {category :[], price:[]}\r\n    })\r\n    const [categories, setCategories] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [limit, setLimit] = useState(6)\r\n    const [skip, setSkip] = useState(0)\r\n    const [size, setSize] = useState(0)\r\n    const [filteredResults, setFilteredResults] = useState([])\r\n    \r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if(data.err){\r\n                setError(data.err)\r\n            }else{\r\n                setCategories(data) \r\n            } \r\n        })\r\n    }\r\n\r\n    \r\n    const loadFilteredResults = (newFilters) => {\r\n        //console.log(newFilterss)\r\n        getFilteredProduct(skip, limit, newFilters)\r\n        .then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else{\r\n                setFilteredResults(data.data)\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit\r\n        getFilteredProduct(toSkip, limit, myFilters.filters)\r\n        .then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else{\r\n                setFilteredResults([...filteredResults,...data.data])\r\n                setSize(data.size)\r\n                setSkip(toSkip)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 && size >= limit && (\r\n               \r\n                <button onClick={loadMore} className=\"btn  mb-5 b\" style={{borderRadius:\"20px\"}}> load more</button>\r\n            )\r\n        )\r\n    }\r\n    useEffect(() => { \r\n        init()\r\n        loadFilteredResults(skip, limit, myFilters.filters)\r\n    },[])\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        //console.log('shop',filters,filterBy)\r\n        const newFilters = {...myFilters}\r\n        newFilters.filters[filterBy]=filters\r\n\r\n        if(filterBy == 'price'){\r\n            let priceValues = handlePrice(filters)\r\n            newFilters.filters[filterBy]=priceValues\r\n\r\n        }\r\n        loadFilteredResults(myFilters.filters)\r\n        setMyFilters(newFilters)\r\n    }\r\n\r\n    const handlePrice = value => {\r\n        const data = prices\r\n        let array = []\r\n        for(let key in data){\r\n            if(data[key]._id === parseInt(value)) {\r\n                array = data[key].array\r\n            }\r\n        }\r\n        return array\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout title='Shop Page' description='Search and find device of your choice' className=\"container-fluid\">\r\n            <div className=\"row\"   >\r\n                <div className=\"col-3\">\r\n                <h4 className=\"header\">Filter By Categories</h4>\r\n                    <ul style={{listStyleType: \"none\"}}>\r\n                        {CheckBox(categories, filters => handleFilters(filters,'category'))}\r\n                    </ul>\r\n                    <h4 className=\"header\">Filter By Prices</h4>\r\n                    <div style={{listStyleType: \"none\"}}>\r\n                        {RadioBox(prices, filters => handleFilters(filters,'price'))}\r\n                    </div>\r\n                </div>\r\n            <div className=\"col-9\">\r\n               <h2 className=\"mb-4 header\">Products</h2>\r\n               <div className=\"row\"  style={{backgroundColor:\"\",textAlign:\"center\"}}>\r\n                   {filteredResults.map((product, i) => (\r\n                        <div key={i} className=\"col-4 mb-3\" > <Card  key={i} product={product} /> </div>\r\n                   ))}\r\n               </div>\r\n               {loadMoreButton()}\r\n            </div>\r\n            </div>\r\n             \r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Shop","E:\\ShoppingApp\\shoppingfront\\src\\user\\UserDashboard.js",["170"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticate } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { getPurchaseHistory } from './ApiUser'\r\nimport moment from 'moment'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [history, setHistory] = useState([])\r\n\r\n    const { user: { _id, name, email, role } } = isAuthenticate()\r\n\r\n    const token = isAuthenticate().token\r\n\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setHistory(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(_id, token)\r\n    },[])\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h3 className=\"card-header\">User Link</h3>\r\n                <ul className='list-group'>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to='/cart'>My cart</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\" >\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>Update Profile</Link>\r\n                    </li>\r\n\r\n                </ul> \r\n            </div> \r\n        )\r\n    }\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className='card mb-5'>\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className='list-group'>\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">{role === 1 ? 'Admin' : 'Registered User'}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                    {history.map((h, i) => {\r\n                        return (\r\n                        <div key={i}>\r\n                            <hr />\r\n                            {h.products.map((p, i) => {\r\n                                return (\r\n                                <div key={i}>\r\n                                    <h6>Product name: {p.name}</h6>\r\n                                    <h6>Product price: ${p.price}</h6>\r\n                                    <h6>Purchased date:{\" \"}\r\n                                        {moment(p.createdAt).fromNow()}\r\n                                    </h6>\r\n                                </div>\r\n                                 )})}\r\n                        </div>) \r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>)\r\n            }\r\n\r\n\r\n\r\n    return (\r\n        <Layout title=\"Dashboard\" description={`Good Day ${name}`} className=\"container\">\r\n\r\n            <div className='row'>\r\n                <div className='col-3'>\r\n                    {userLinks()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Dashboard","E:\\ShoppingApp\\shoppingfront\\src\\user\\AdminDashboard.js",["171"],"import React from 'react'\r\nimport Layout from '../core/Layout'\r\nimport {isAuthenticate} from '../auth/index'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const {user:{_id, name, email, role}} = isAuthenticate()\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n        <div className=\"card\">\r\n           <h3 className=\"card-header\">admin Link</h3>\r\n                <ul className='list-group'>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to='/create/category'>Create Category</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\" >\r\n                        <Link className=\"nav-link\" to='/create/product'>Create Product</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\" >\r\n                        <Link className=\"nav-link\" to='/admin/orders'>Show Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\" >\r\n                        <Link className=\"nav-link\" to='/admin/products'>Manage Product</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n        <div className='card mb-5'>\r\n        <h3 className=\"card-header\">User Information</h3>\r\n        <ul className='list-group'>\r\n            <li className=\"list-group-item\">{name}</li>\r\n            <li className=\"list-group-item\">{email}</li>\r\n            <li className=\"list-group-item\">{role === 1 ? 'Admin' : 'Registered User' }</li>\r\n        </ul>\r\n    </div>\r\n        )\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <Layout title=\"Dashboard\" description={`Good Day ${name}`} className=\"container\">\r\n\r\n            <div className='row'>\r\n                <div className='col-3'>\r\n                    {adminLinks()}\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {adminInfo()}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard","E:\\ShoppingApp\\shoppingfront\\src\\core\\Home.js",["172"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { getProducts } from './ApiCor'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([])\r\n    const [productsByArrival, setProductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsBySell(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival()\r\n        loadProductsBySell()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Layout title='Home Page' description='Node React App' className=\"container-fluid\">\r\n            <Search />\r\n\r\n\r\n\r\n\r\n            <div className=\"container\" style={{ backgroundColor: \"\", textAlign: \"center\" }}>\r\n\r\n\r\n                <h2 className=\"mb-4 header\">New Arrival</h2>\r\n\r\n                <div className=\"row\" >\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-10\">\r\n                        <div className=\"row\">  {productsByArrival.map((product, i) => (<div key={i} className=\"col-4 mb-3\" ><Card key={i} product={product} /></div>))}</div>\r\n                    </div>\r\n                    <div className=\"col-1\"></div>\r\n                </div>\r\n\r\n\r\n                <hr />\r\n                <h2 className=\"mb-4 header\">Best Sellers</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-10\">\r\n                        <div className=\"row\">  {productsBySell.map((product, i) => (<div key={i} className=\"col-4 mb-3\" ><Card key={i} product={product} /></div>))}</div>\r\n                    </div>\r\n                    <div className=\"col-1\"></div>\r\n\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Home\r\n","E:\\ShoppingApp\\shoppingfront\\src\\core\\NavBar.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\core\\Product.js",["173","174","175","176","177"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from './Layout'\r\nimport {getProducts,read,listRelated} from './ApiCor'\r\nimport Card , {showStock,shouldRedirect} from './Card'\r\nimport ShowImage from './ShowImage'\r\nimport moment from 'moment'\r\nimport {addItem} from './CartHelpers'\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\nimport {API} from '../Config'\r\n\r\n\r\n\r\n\r\nconst Product = (props, show=true) => {\r\n\r\n    const [product, setProduct] = useState({})\r\n    const [relatedProduct, setRelatedProduct] = useState([])\r\n    const [error, setError]= useState(false)\r\n    const [redirect, setRedirect] = useState(false)    \r\n    const loadSingleProduct = productId => {\r\n        read(productId).then(data => {\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else{\r\n                setProduct(data)\r\n                // fetch related prouct\r\n                listRelated(data._id)\r\n                .then(data => {\r\n                    if(data.error){\r\n                        setError(data.error)\r\n                    }else{\r\n                        setRelatedProduct(data)\r\n                      \r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId\r\n        loadSingleProduct(productId)\r\n    },[props])\r\n    const AddToCarts = () => {\r\n        addItem(product, () => {\r\n            setRedirect(true)\r\n        })\r\n    }\r\n     const AddToCart = (show) => {\r\n        return (   \r\n            show && <button onClick={AddToCarts} className=\"btn  mt-2 mb-2 b\" style={{borderRadius:\"40px\",padding:\"10px\"}}>\r\n                   <span>Add to Cart</span>\r\n             </button>\r\n        )\r\n    } \r\n     const shouldRedirect = redirect => {\r\n        if(redirect){\r\n            return <Redirect to='/cart' />\r\n        }\r\n    }     \r\n\r\n    return (\r\n        <Layout title={product && product.name} description=\" \" className=\"container-fluid\" >\r\n         {shouldRedirect(redirect)}\r\n        <div className=\"row\" style={{marginTop:\"50px\"}}>\r\n\r\n            <div className=\"col-4\"><div style={{backgroundColor:\"white\",display:\"flex\",justifyContent:\"center\",borderRadius:\"40px\"}}> <img src={`${API}/products/photo/${props.match.params.productId}`} alt=\"name\" className=\"mb-3\" style={{height:'700px', maxWidth:'100%',marginTop:\"10px\"}}/></div></div>\r\n            <div className=\"col-8\" style={{backgroundColor:\"white\",borderRadius:\"40px\"}}> \r\n            <h2 className=\"headers\" style={{marginBottom:\"30px\",marginTop:\"40px\"}}>Descriptions</h2>\r\n            <h3 className=\"headers\" style={{marginBottom:\"30px\"}}>{product.description}</h3>\r\n            <h2 className=\"headers\" style={{marginBottom:\"30px\"}}>Brand {product.category && product.category.name}</h2>\r\n            {/* <h3>{product.description}</h3> */}\r\n            <h4 className=\"headers\" style={{marginBottom:\"30px\"}}>Added On {moment(product.createdAt).fromNow()}</h4>\r\n            <h2 className=\"headers\" style={{marginBottom:\"30px\"}}>Price ${product.price}</h2>\r\n            <h2>{showStock(product.quantity)}</h2>\r\n            {AddToCart(show)}\r\n            </div>\r\n        </div>\r\n       \r\n       \r\n          <div className=\"row\">\r\n\r\n              <div className=\"col-12\" style={{}}>\r\n                 <h2>Related product</h2>\r\n                 <div className=\"row\">\r\n                 {relatedProduct.map((p,i) => (\r\n                     <div className=\"col-3\" style={{marginBottom:\"30px\",textAlign:\"center\"}} >\r\n                         <Card key={i} product={p}/>\r\n                     </div>\r\n                 ))}\r\n                 </div>\r\n              </div>\r\n\r\n          </div>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Product","E:\\ShoppingApp\\shoppingfront\\src\\admin\\AddCategory.js",["178","179"],"import Layout from '../core/Layout'\r\nimport React, { useState } from 'react'\r\nimport {signin, authenicate, isAuthenticate } from '../auth'\r\nimport '../core/NavBar.css'\r\nimport {createCategory} from './ApiAdmin'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [sucess, setSuccess] = useState('')\r\n\r\n    // destructure user and tokrn from localstorage\r\n\r\n    const {user , token} = isAuthenticate()\r\n    \r\n    const handleChange = (e) => {\r\n        setError('')\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        setError('')\r\n        setSuccess(false)\r\n        // make rqst to api to create category\r\n        createCategory(user._id, token, {name})\r\n        .then(data => {\r\n            if(data.err){\r\n                setError(true)\r\n            }else{\r\n                setError('')\r\n                setSuccess(true)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const newCategoryForm = () => {\r\n        return(\r\n        <form onSubmit={clickSubmit}>\r\n            <div className='from-group'>\r\n                <label className='text-muted'>Name</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} autoFocus required/>\r\n                <button className=\"btn btn-outline-primary\" > Create Category</button>\r\n            </div>\r\n        </form>\r\n        )\r\n    }\r\n    const showSuccess = () => {\r\n        if(sucess){\r\n            return <h3 className=\"text-success\">{name} is created</h3>\r\n        }\r\n    }\r\n    const showError = () => {\r\n        if(error){\r\n            return <h3 className=\"text-danger\">{name} Should be unique</h3>\r\n        }\r\n    }\r\n\r\n    const goBack = () => \r\n        <div className='mt-5'>\r\n            <Link to='/admin/dashboard' className='text-warning'>Back to Dashboad</Link>\r\n        </div>\r\n    \r\n     \r\n    return (\r\n        <Layout title=\"Add a new Category\" description={`Good Day ${user.name}`}>\r\n\r\n            <div className='row'>\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryForm()}\r\n                    {goBack()}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </Layout>\r\n    ) \r\n}\r\n\r\nexport default AddCategory","E:\\ShoppingApp\\shoppingfront\\src\\admin\\AddProduct.js",["180","181","182","183","184"],"import Layout from '../core/Layout'\r\nimport React, { useState, useEffect } from 'react'\r\nimport {isAuthenticate } from '../auth'\r\nimport '../core/NavBar.css'\r\nimport {createProduct,getCategories} from './ApiAdmin'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AddProduct = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        description:'',\r\n        price:'',\r\n        categories:[],\r\n        category:'',\r\n        shipping:'',\r\n        quantity:'',\r\n        photo:'',\r\n        loading:false,\r\n        error:'',\r\n        createdProduct:'',\r\n        redirectToProfile:false,\r\n        formData:''\r\n    })\r\n    const {user , token} = isAuthenticate()\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories ,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values\r\n\r\n    //load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if(data.error){\r\n                setValues({...values,error:data.error})\r\n            }else{\r\n                setValues({...values, categories:data, formData:new FormData()})\r\n            }\r\n        })\r\n    }\r\n\r\n    //runs when there is a change in state\r\n    useEffect(() => {\r\n       init()\r\n    },[])\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({...values, [name]:value})\r\n    }\r\n  \r\n    const clickSubmit = (event) => {\r\n        event.preventDefault() \r\n        setValues({...values,error:'',loading:true})\r\n\r\n        createProduct(user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error){\r\n                setValues({...values, error:data.error})\r\n            }else {\r\n                setValues({\r\n                    ...values,name:'',description:'',photo:'',price:'',quantity:'',loading:false,createdProduct:data.name\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const newPostForm = () => {\r\n        return(\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Form</h4>\r\n            <div className='form-group'>\r\n                <label className='btn btn-secondary'>\r\n                    <input onChange={handleChange('photo')} type=\"file\" name='photo' accept=\"image/*\"  multiple />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')}  type=\"text\" className=\"form-control\" value={name}/>\r\n            </div>\r\n \r\n            <div className=\"form-group\">\r\n                <label className=\"\">Description</label>\r\n                <input onChange={handleChange('description')}  type=\"text\"  className=\"form-control\" value={description}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')}  type=\"number\"  className=\"form-control\" value={price}/>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')}  type=\"text\"  className=\"form-control\" >\r\n                    <option value=\"\">Please Select</option>\r\n                    {categories && categories.map((c , i) => (<option key={i} value={c._id}>{c.name}</option>))}\r\n                </select> \r\n            </div>\r\n \r\n            <div className=\"form-control\">\r\n                <label className=\"text-muted\">quantity</label>\r\n                <input onChange={handleChange('quantity')}  type=\"number\" className=\"form-control\" value={quantity}/>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label className=\"text-muted\">shipping</label>\r\n                <select onChange={handleChange('shipping')}  type=\"text\" className=\"form-control\">\r\n                    <option value=\"\">Please Select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">yes</option>\r\n                </select>\r\n            </div>\r\n            \r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}}>{error}</div>\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        <div className=\"alert alert-info\" style={{display: createdProduct ? '' : 'none'}}><h2>{`${createProduct}`} is created</h2></div>\r\n        \r\n    }\r\n    const showLoading = () => {\r\n        loading && (<div className=\"alert alert-success\" style={{display: createdProduct ? '' : 'none'}}><h2>loading</h2></div>)\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Add a new Product\" description={`Good Day ${user.name}`}>\r\n\r\n        <div className='row'>\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              {showLoading()}\r\n              {showSuccess()}\r\n              {showError()}\r\n              {newPostForm()}\r\n            </div>\r\n\r\n        </div>\r\n    </Layout>\r\n    )\r\n}\r\n\r\nexport default AddProduct","E:\\ShoppingApp\\shoppingfront\\src\\auth\\PrivateRoute.js",["185"],"import React,{Component} from 'react'\r\nimport {Route , Redirect} from 'react-router-dom'\r\nimport {isAuthenticate} from './index'\r\n\r\nconst PrivateRoute = ({component : Component, ...rest}) => (\r\n    <Route {...rest} render={props => isAuthenticate() ? (\r\n        <Component {...props} />\r\n    ):(\r\n        <Redirect to={{pathname:'/signin', state:{from: props.location}}}/>\r\n        )}\r\n    />\r\n)\r\n\r\nexport default PrivateRoute","E:\\ShoppingApp\\shoppingfront\\src\\auth\\AdminRoute.js",["186"],"import React,{Component} from 'react'\r\nimport {Route , Redirect} from 'react-router-dom'\r\nimport {isAuthenticate} from './index'\r\n\r\nconst AdminRoute = ({component : Component, ...rest}) => (\r\n    <Route {...rest} render={props => isAuthenticate() && isAuthenticate().user.role === 1 ? (\r\n        <Component {...props} />\r\n    ):(\r\n        <Redirect to={{pathname:'/signin', state:{from: props.location}}}/>\r\n        )}\r\n    />\r\n)\r\n\r\nexport default AdminRoute","E:\\ShoppingApp\\shoppingfront\\src\\core\\ApiCor.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\core\\FixedPrices.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\core\\Layout.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\core\\CheckBox.js",["187"],"import React , {useState, useEffect} from 'react'\r\n\r\nconst CheckBox = (categories, handleFilters) => {\r\n    const [checked, setChecked]=useState([])\r\n\r\n    const handleToggle = c => () => {\r\n            const currentCategoryId = checked.indexOf(c) // return the first inex of -1\r\n            const newCheckedCategoryId = [...checked]\r\n            //if currently checked was not already in checked state > push\r\n            //else pull/take off\r\n            if(currentCategoryId === -1) {\r\n                newCheckedCategoryId.push(c)\r\n            }else {\r\n                newCheckedCategoryId.splice(currentCategoryId, 1)\r\n            }\r\n            console.log(newCheckedCategoryId)\r\n            setChecked(newCheckedCategoryId)\r\n            handleFilters(newCheckedCategoryId)\r\n    }\r\n\r\n    return (\r\n        categories.map((c,i) => (\r\n            <li key={i} className=\"List-unstyled\">\r\n                <input onChange={handleToggle(c._id)} value={checked.indexOf(c._id === -1)} type=\"checkbox\" className=\"from-check-input\"/>\r\n                <label className=\"form-check-label\">{c.name}</label>\r\n            </li>\r\n        ))\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CheckBox","E:\\ShoppingApp\\shoppingfront\\src\\core\\RadioBox.js",["188","189","190"],"import React,{useState,useEffect,Fragment} from 'react'\r\n\r\nconst RadioBox = (prices,handleFilters) => {\r\n    const [value, setValue] = useState(0)\r\n    const handleChange = (event) => {\r\n        handleFilters(event.target.value)\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        prices.map((p,i) => (\r\n            <div key={i} className=\"List-unstyled\">\r\n                <input onChange={handleChange} value={`${p._id}`} name={p} type=\"radio\" className=\"mr-2 ml-4\"/>\r\n                <label className=\"form-check-label\">{p.name}</label>\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default RadioBox","E:\\ShoppingApp\\shoppingfront\\src\\admin\\ApiAdmin.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\core\\Card.js",["191","192","193"],"import React, { useState } from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport ShowImage from './ShowImage'\r\nimport './NavBar.css'\r\nimport {addItem, updateItem,removeItem, ddItem} from './CartHelpers'\r\nimport { updateLocale } from 'moment'\r\n\r\nexport const showViewButton = (showV) =>{\r\n    return(\r\n        showV && <button className=\"btn  mt-2 mb-2 mr-3 b\" style={{marginRight:5}} style={{borderRadius:\"20px\"}}  >\r\n            View Product\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport const shouldRedirect = (redirect) => {\r\n    if(redirect){\r\n        return <Redirect to='/cart' />\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const showStock = quantity => {\r\n    return quantity > 0 ? (<span className=\"badge badge-primary badge-pill\" style={{color:'green'}}>In Stock</span>) : (<span className=\"badge badge-primary badge-pill\">Out Of Stock</span>)\r\n}\r\n\r\n  \r\n\r\n\r\nconst Card =({product, show=true,showV=true,cartUpdate=false, deleteProduct=false,setRun = f =>f, run = 'umdefined'}) => {\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [count, setCount] = useState(product.count)\r\n   \r\n    \r\n\r\n    const AddToCarts = () => {\r\n        addItem(product, () => {\r\n            setRedirect(true)\r\n        })\r\n    }\r\n   \r\n     const AddToCart = (show) => {\r\n        return (   \r\n            show && <button onClick={AddToCarts} style={{borderRadius:\"20px\"}} className=\"btn  mt-2 mb-2 b \">\r\n                    Add to Cart\r\n             </button>\r\n        )\r\n    } \r\n    \r\n    const handleChange = productId => event => {\r\n        setRun(!run);\r\n        setCount(event.target.value < 1 ? 1 : event.target.value)\r\n\r\n        if(event.target.value >= 1) {\r\n            updateItem(productId , event.target.value)\r\n        }\r\n    } \r\n\r\n    const showCartUpdateOption = cartUpdate => {\r\n        return cartUpdate && <div>\r\n            \r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Adjust Quantity</span>\r\n                </div>\r\n                <input type='number' className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n            </div>\r\n            </div>\r\n    }\r\n    const deleteProductButton = deleteProduct => {\r\n        return deleteProduct && (\r\n            \r\n            <button onClick={() => {\r\n                removeItem(product._id);\r\n                setRun(!run); // run useEffect in parent Cart\r\n              }}className=\"btn btn-outline-danger mt-2 mb-2\">\r\n                    Delete Product\r\n             </button>\r\n\r\n             \r\n        ) \r\n    }\r\n  \r\n    \r\n    return(\r\n       \r\n            <div className=\"card\" style={{display:'flex',alignItems:'center',borderRadius:\"50px\"}}>\r\n                <div className=\"card-header\">{product.name}</div>\r\n                <div className=\"card-body\" >\r\n                    {shouldRedirect(redirect)}\r\n                  \r\n                 \r\n                    <ShowImage item={product} url=\"products\"/>\r\n                   \r\n                    <p>${product.price}</p>\r\n                    <p>{showStock(product.quantity)}</p>\r\n                    <Link to={`/product/${product._id}`}>\r\n                       {showViewButton(showV)}\r\n                    </Link>\r\n                    {deleteProductButton(deleteProduct)}\r\n                    {AddToCart(show)}\r\n                    {showCartUpdateOption(cartUpdate)}\r\n                  \r\n                   \r\n                </div>\r\n            </div>\r\n           \r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Card","E:\\ShoppingApp\\shoppingfront\\src\\auth\\index.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\core\\ShowImage.js",[],["194","195"],"E:\\ShoppingApp\\shoppingfront\\src\\core\\Search.js",["196"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from './Layout'\r\nimport Card from './Card'\r\nimport {getCategories, list} from './ApiCor'\r\n\r\nconst Search = () => {\r\n\r\n    const [data, setData] = useState({\r\n        categories:[],\r\n        category:'',\r\n        search:'',\r\n        results:[],\r\n        searched: false\r\n    })\r\n    const{categories,category,search,results,searched} = data\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if(data.err){\r\n                console.log(data.err)\r\n            }else{\r\n                setData({...data, categories:data})\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        loadCategories()\r\n    },[])\r\n    const searchData = () => {\r\n      //  console.log(search, category)\r\n      if(search){\r\n          list({search:search || undefined, category: category})\r\n          .then(response => {\r\n                if(response.error){\r\n                    console.log(response.error)\r\n                }else{\r\n                    setData({...data, results:response, searched:true})\r\n                }\r\n          })\r\n      }\r\n    }\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault()\r\n        searchData()\r\n    }\r\n    const handleChange = name => event =>{\r\n        setData({...data, [name]:event.target.value, searched:false})\r\n    }\r\n    const searchMesssage = (searched, results) => {\r\n        if(searched && results.length > 0) {\r\n            return `Found ${results.length} products`\r\n        }\r\n        if(searched && results.length < 1) {\r\n            return `No products found`\r\n        }\r\n    }\r\n\r\n    const searchProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMesssage(searched, results)}\r\n                </h2>\r\n                <div className=\"row\">\r\n                 <div className=\"col-2\"></div>\r\n                 <div className=\"col-8\">\r\n                 <div className=\"row\"> {results.map((product, i)=>(<div key={i} className=\"col-4 mb-3\" ><Card key={i} product={product} /></div>))}  </div>\r\n                 </div>\r\n                \r\n                <div className=\"col-2\"></div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        \r\n        )\r\n    }\r\n    \r\n    const searchForm = () => {\r\n    return (\r\n        <form onSubmit={searchSubmit} className=\"mt-3 mb-3\">\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select className=\"btn mr-2\" onChange={handleChange('category')}>\r\n                            <option value=\"All\">All Category</option>\r\n                            {categories.map((c,i) => (<option key={i} value={c._id}>{c.name}</option>))}\r\n                        </select>\r\n                    </div>\r\n                    <input type='search' className=\"form-control\" onChange={handleChange('search')} placeholder='Search by name' />\r\n                </div>\r\n                <div className=\"btn input-group-append\" style={{border:'none'}}>\r\n                    <button className=\"input-group-text\">Search</button>\r\n\r\n                </div>\r\n            </span>\r\n        </form>\r\n    )\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container\">\r\n                {searchForm()}\r\n                <div className=\"container-fluid mb-3\">\r\n\r\n                    {searchProducts(results)}\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","E:\\ShoppingApp\\shoppingfront\\src\\Config.js",[],"E:\\ShoppingApp\\shoppingfront\\src\\core\\CartHelpers.js",["197","198"],"export const addItem = (item, next) => {\r\n    let cart = []\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            //JSON.parse to covert json to object\r\n            //JSON.stringfy to convert object to json\r\n            cart = JSON.parse (localStorage.getItem('cart'))\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        })\r\n\r\n        // remove duplicates\r\n        //build an array from new set and turn it back into array using Array.from\r\n        //so that later we can re-map it\r\n        //new set will only allow unique values in it\r\n        //so pass the ids of each object/product \r\n        //if the loop tries to add the same value again, it will get ignored\r\n        //...with the array of ids we got on when first map() was used \r\n        //run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map((p)=>(p._id)))).map(id => {\r\n            return cart.find(p => p._id === id)\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n        next()\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const itemTotal = () => {\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            return JSON.parse(localStorage.getItem('cart')).length\r\n        }\r\n    }\r\n    return 0\r\n}\r\n\r\n// it will give all the items from the cart\r\nexport const getCart = () => {\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            return JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n    }\r\n    return []\r\n}\r\n\r\n\r\n\r\nexport const updateItem = (productId, count) => {\r\n\r\n        let cart = []\r\n        if(typeof window !== 'undefined'){\r\n            if(localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem('cart'))\r\n            }\r\n            cart.map((product, i) => {\r\n                if(product._id === productId) {\r\n                    cart[i].count = count\r\n                }\r\n            })\r\n\r\n            localStorage.setItem('cart', JSON.stringify(cart))\r\n        }\r\n\r\n\r\n}\r\n\r\nexport const removeItem = (productId) => {\r\n\r\n    let cart = []\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n        cart.map((product, i) => {\r\n            if(product._id === productId) {\r\n                cart.splice(i, 1)\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n    }\r\n  \r\n    return cart\r\n}\r\n\r\n\r\nexport const emptyCart = next => {\r\n\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.removeItem('cart')\r\n        next()\r\n    }\r\n\r\n}","E:\\ShoppingApp\\shoppingfront\\src\\core\\Cart.js",["199","200","201"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from './Layout'\r\nimport {getProducts} from './ApiCor'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\nimport {getCart,ddItem} from './CartHelpers'\r\nimport { Link } from 'react-router-dom'\r\nimport CheckOut from './CheckOut'\r\n\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([])\r\n    const [run, setRun] = useState(false);\r\n \r\n    \r\n  \r\n    \r\n    useEffect(() => {\r\n        console.log('MAX DEPTH ...');\r\n        setItems(getCart());\r\n      }, [run]);\r\n\r\n    \r\n\r\n    \r\n\r\n    const showItems = items => {\r\n        console.log(items);\r\n        return (\r\n            <div style={{margin:'auto'}}>\r\n                <h2 className=\"header\">Your cart has {`${items.length}`} </h2>\r\n                <hr/>\r\n                <div className=\"row\" style={{margin:\"auto\"}}>\r\n                    {items.map((product, i) => (<div className=\"col-7\" style={{textAlign:\"center\",marginBottom:\"20px\"}}><Card key={i} product={product} show={false} cartUpdate={true} deleteProduct={true}  setRun={setRun} run={run} /></div>)) }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const noItem = () => {\r\n        return (\r\n        <h2 className=\"header\">your cart is empty <br/> <Link to='/shop'>Continue shoping</Link></h2>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout title='Shopping cart' description='manage ur cart items' className=\"container-fluid\">\r\n           \r\n        <div className='row' style={{marginBottom:\"400px\"}}>\r\n            <div className='col-6' style={{textAlign:'center'}}>\r\n                    {items.length > 0 ? showItems(items) : noItem() }\r\n            </div>\r\n            <div className='col-6'>\r\n                  <CheckOut products={items} setRun={setRun} run={run} />\r\n            </div>\r\n        </div>\r\n       \r\n\r\n        </Layout>\r\n    )\r\n}\r\nexport default Cart\r\n","E:\\ShoppingApp\\shoppingfront\\src\\core\\CheckOut.js",["202","203","204","205","206","207"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from './Layout'\r\nimport {getProducts, getBraintreeClienttoken, processPayment,createOrder} from './ApiCor'\r\nimport {emptyCart} from './CartHelpers'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\nimport {isAuthenticate} from '../auth'\r\nimport { Link } from 'react-router-dom'\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\n\r\n\r\nconst CheckOut = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticate() && isAuthenticate().user._id\r\n    const token = isAuthenticate() && isAuthenticate().token\r\n\r\n    \r\n    const  getToken = (userId,token) => {\r\n            getBraintreeClienttoken(userId,token).then(data => {\r\n             \r\n                if(data.error){\r\n                    setData({...data, error:data.error})\r\n                }else {\r\n                    \r\n                    setData({ clientToken: data.clientToken})\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {  \r\n        getToken(userId,token)\r\n    },[])\r\n\r\n    const handleAddress = event => {\r\n        setData({...data, address:event.target.value})\r\n    }\r\n\r\n\r\n    const getTotal = () => {\r\n        return(\r\n            products.reduce((currentValue, nextValue) =>{\r\n                return currentValue + nextValue.count * nextValue.price\r\n            }, 0)\r\n        )\r\n    }\r\n\r\n    const showCheckout = () => {\r\n        return (\r\n           <div> {isAuthenticate() ? (\r\n                <div> {showDropIn()} </div>\r\n                ) : (\r\n                    <Link to='/signin'><button className=\"btn btn-primary\">Sign in to checkout</button></Link>\r\n                ) }\r\n            \r\n        </div>)\r\n    }\r\n\r\n\r\n    let diliveryAddress = data.address\r\n\r\n    const buy = () => {\r\n        setData({loading : true})\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n\r\n        let nonce \r\n\r\n        let getNonce = data.instance.requestPaymentMethod()\r\n        .then(data => {\r\n            //console.log(data)\r\n            nonce = data.nonce\r\n            // //  once you have nonce (card type, card number) send nonce as payment method nonce \r\n            // // and also total to be charged \r\n            // console.log('send nonce and total to process', nonce, getTotal(products))\r\n            const paymentData = {\r\n                paymentMethodNonce: nonce,\r\n                amount: getTotal(products)\r\n            }\r\n\r\n            processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: diliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => {\r\n        return (\r\n            //on blur means u click anywhere on page on blur will run\r\n        <div onBlur={() => setData({...data, error:''})}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                    <div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <label className=\"text-muted\">Delivery address:</label>\r\n                            <textarea \r\n                                onChange={handleAddress}\r\n                                className=\"form-control\"\r\n                                value={data.address}\r\n                                placeholder=\"Type your delivery address here ...\"\r\n                            />\r\n                        </div>\r\n                        <DropIn options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                            \r\n                        }} onInstance = {instance => (data.instance = instance)} />\r\n                        <button onClick={buy} className=\"btn btn-success btn-block\">Pay</button>\r\n                    </div>\r\n            ): null }\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    const showError = error => {\r\n\r\n        return(\r\n        <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}}>\r\n            {error}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = success => {\r\n\r\n        return(\r\n        <div className=\"alert alert-info\" style={{display: success ? '' : 'none'}}>\r\n           Thanks ur payment was successfull\r\n        </div>\r\n        )\r\n    }\r\n\r\n        const showLoading = (loading) => {\r\n            return(\r\n            loading && <h2>Loading.....</h2>\r\n            )\r\n        }\r\n    \r\n    return (\r\n            <div>\r\n                <h2 className=\"header\">Total: ${getTotal()}</h2>\r\n                {showLoading(data.loading)}\r\n                {showSuccess(data.success)}\r\n                {showError(data.error)}\r\n                {showCheckout()}       \r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default CheckOut","E:\\ShoppingApp\\shoppingfront\\src\\admin\\Orders.js",["208","209","210","211"],"import Layout from '../core/Layout'\r\nimport React, { useState, useEffect } from 'react'\r\nimport {isAuthenticate } from '../auth'\r\nimport '../core/NavBar.css'\r\nimport moment from 'moment'\r\nimport {createProduct,getCategories,listOrders,getStatusValues,updateOrderStatus} from './ApiAdmin'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const [stateValues, setStatusValues] = useState([])\r\n    const {user, token} = isAuthenticate()\r\n    \r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if(data.error){\r\n                console.log(data.error)\r\n            } else {\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValue = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if(data.error){\r\n                console.log(data.error)\r\n            } else {\r\n                setStatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n        loadStatusValue()\r\n    }, [])\r\n\r\n    const showOrdersLength = () => {\r\n\r\n        if(orders.length > 0) {\r\n            return(\r\n                <h1 className=\"text-danger display-2\">Total Orders{orders.length}</h1>\r\n            )\r\n        } else {\r\n            return <h1 className=\"text-danger\">No Orders</h1>\r\n        }\r\n   \r\n    }\r\n\r\n    const showInput = (key, value) => {\r\n        return (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"\" >{key}</div>\r\n               <input type=\"text\" value={value} className=\"form-control\" readOnly />\r\n            </div>\r\n        </div>\r\n        )    \r\n    }\r\n    const handleStatusChange = (e, orderId) => {\r\n       return (\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\r\n            console.log('this is we getting'+ data)\r\n            if(data.error){\r\n                    console.log('Status update failed ')\r\n            } else {\r\n                loadOrders()\r\n            }\r\n        })\r\n       )\r\n    }\r\n\r\n    const showStatus = (o) => {\r\n        return (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status} </h3>\r\n            <select className=\"form-control\" onChange={(e) =>handleStatusChange(e, o._id)}>\r\n\r\n                <option>Update Status</option>\r\n                {stateValues.map((status, index) => (<option key={index} value={status}> {status} </option>))}\r\n            </select>\r\n        </div>\r\n        )\r\n    } \r\n\r\n    return (\r\n        <Layout title=\"orders\" description={`Good Day ${user.name}, ypu can manage`}>\r\n\r\n            <div className='row'>\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n                    {orders.map((o, oIndex) => {\r\n                        return(\r\n                            <div className='mt-5' key={oIndex} style={{borderBottom:'5px solid indigo'}}>\r\n                                    <h2 className=\"mb-5\">\r\n                                        <span className=\"bg-primary\">Order ID: {o._id}</span>\r\n                                    </h2>\r\n                                    <ul className=\"list-group mb-2\">\r\n                                        <li className=\"list-group-item\">\r\n                                            {showStatus(o)}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Transaction ID: {o.transaction_id}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                           Total Amount: ${o.amount}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Ordered by: {o.user.name}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Ordered On: {moment(o.createdAt).fromNow()}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Delivery address: {o.address}\r\n                                        </li>\r\n\r\n                                    </ul>\r\n\r\n                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                        Total products in the order: {o.products.length}\r\n                                    </h3>\r\n\r\n\r\n                                    {o.products.map ((p, pIndex) => (\r\n                                        <div className=\"mb-4\" key={pIndex} style={{padding: '20px', border:'1px solid indigo' }}>\r\n                                            {showInput('Product name', p.name)}\r\n                                            {showInput('Product price', p.price)}\r\n                                            {showInput('Product count', p.count)}\r\n                                            {showInput('Product Id', p._id)}\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </Layout>\r\n    ) \r\n}\r\n\r\nexport default Orders","E:\\ShoppingApp\\shoppingfront\\src\\user\\Profile.js",["212","213","214","215"],"import React, {useState,useEffect} from 'react'\r\nimport Layout from '../core/Layout'\r\nimport {isAuthenticate} from '../auth/index'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {read,update,updateUser} from './ApiUser'\r\n\r\n\r\n\r\nconst Profile = ({match}) => {\r\n    \r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:false,\r\n        success: false\r\n    })\r\n    \r\n    const {token} = isAuthenticate()\r\n    const {name, email, password, error, success} = values\r\n\r\n    const init = (userId) => {\r\n        // console.log(userId)\r\n        read(userId, token).then(data => {\r\n           \r\n           if(data.error){\r\n                setValues({...values, error:true})\r\n           }else{\r\n               setValues({...values, name: data.name, email: data.email})\r\n           }\r\n        })\r\n    }\r\n    \r\n    useEffect (() => {\r\n        init(match.params.userId)\r\n    },[])\r\n\r\n    const handleChange = name => e => {\r\n        setValues({...values, error: false, [name]: e.target.value })\r\n    }\r\n    \r\n    const clickSubmit = (e) => {\r\n            e.preventDefault()\r\n            update(match.params.userId, token, {name, email, password}).then(data => {\r\n                if(data.error) {\r\n                    console.log(data.error)\r\n                }else {\r\n                    updateUser(data, () => {\r\n                        setValues({...values, name: data.name, email: data.email, success: true})\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    const redirectUser = (success) => {\r\n        if(success) {\r\n            return (\r\n                <Redirect to='/cart'/>\r\n            )\r\n        }\r\n    }\r\n    function myFunction() {\r\n        var x = document.getElementById(\"myInput\");\r\n        if (x.type === \"password\") {\r\n          x.type = \"text\";\r\n        } else {\r\n          x.type = \"password\";\r\n        }\r\n      }\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Name</label>\r\n                    <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Email</label>\r\n                    <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Password</label>\r\n                    <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" id=\"myInput\" value={password} />\r\n                    \r\n            </div>\r\n\r\n            <button  onClick={clickSubmit} className=\"mt-2 btn btn-primary\"> Submit </button>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <Layout title='User Update' description='Update user information' className=\"container-fluid\">\r\n           \r\n           <h2>Profile update</h2>\r\n           {profileUpdate(name, email, password)}\r\n           {redirectUser(success)}\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile","E:\\ShoppingApp\\shoppingfront\\src\\user\\ApiUser.js",["216"],"\r\nimport { API } from '../Config'\r\nimport queryString from 'query-string'\r\n\r\nexport const read = (userId, token) => {\r\n    return fetch(`${API}/user/${userId}` , {\r\n        method:'GET',\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const update = (userId, token, user) => {\r\n    return fetch(`${API}/user/${userId}` , {\r\n        method:'PUT',\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n\r\nexport const updateUser = (user, next) => {\r\n    \r\n    if(typeof window !== 'undefined') {\r\n        if(localStorage.getItem('jwt')) {\r\n            let auth = JSON.parse(localStorage.getItem('jwt'))\r\n            auth.user = user \r\n            localStorage.setItem('jwt', JSON.stringify(auth))\r\n            next()\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPurchaseHistory = (userId, token) => {\r\n    return fetch(`${API}/orders/by/user/${userId}` , {\r\n        method:'GET',\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response => {\r\n        return response.json()\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}","E:\\ShoppingApp\\shoppingfront\\src\\admin\\ManageProducts.js",["217","218","219","220","221","222","223"],"import Layout from '../core/Layout'\r\nimport React, { useState, useEffect } from 'react'\r\nimport {isAuthenticate } from '../auth'\r\nimport '../core/NavBar.css'\r\nimport {createProduct,getCategories} from './ApiAdmin'\r\nimport { Link } from 'react-router-dom'\r\nimport {getProduct,getProducts,deleteProduct,updateProduct} from './ApiAdmin'\r\n\r\n\r\nconst ManageProducts = () => {\r\n\r\n     const [products, setProducts] = useState([])\r\n     const { user: { _id, name, email, role } } = isAuthenticate()\r\n\r\n     const token = isAuthenticate().token\r\n\r\n     const loadProducts = () => {\r\n         getProducts().then(data => {\r\n            if(data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setProducts(data)\r\n            }\r\n         })\r\n     }\r\n\r\n     const destroy = (productId )=> {\r\n         console.log(_id)\r\n        deleteProduct(productId,_id, token).then(data => {\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }else{\r\n                loadProducts()\r\n            }\r\n        })\r\n     }\r\n\r\n     useEffect(() => {\r\n        loadProducts()\r\n     },[])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout title=\"Manage products\" description='Performe CURD on Products'>\r\n\r\n        <div className='row'>\r\n         <div className=\"col-12\">\r\n             <h2 className=\"text-center\">Total {products.length} </h2>\r\n                <hr></hr>\r\n                <ul className=\"list-group\">\r\n                     {products.map((p,i) => (\r\n                         <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            <strong>{p.name}</strong>\r\n                            <Link to={`/admin/product/update/${p._id}`}>\r\n                                <button className=\"badge badge-warning badge-pill\" style={{color:'green'}}>Update</button>\r\n                            </Link>\r\n                            <button onClick={() => destroy(p._id)} className=\"badge badge-danger badge-pill\" style={{color:'red',border:\"1px\"}}> Delete </button>\r\n                         </li>\r\n                     ))}\r\n                </ul>\r\n         </div>\r\n        </div>\r\n    </Layout>\r\n    )\r\n}\r\n\r\nexport default ManageProducts","E:\\ShoppingApp\\shoppingfront\\src\\admin\\UpdateProduct.js",["224","225","226","227"],"import Layout from '../core/Layout'\r\nimport React, { useState, useEffect } from 'react'\r\nimport {isAuthenticate } from '../auth'\r\nimport '../core/NavBar.css'\r\nimport {getProduct,getCategories,updateProduct} from './ApiAdmin'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nconst UpdateProducts = ({match}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        description:'',\r\n        price:'',\r\n        categories:[],\r\n        category:'',\r\n        shipping:'',\r\n        quantity:'',\r\n        photo:'',\r\n        loading:false,\r\n        error:'',\r\n        createdProduct:'',\r\n        redirectToProfile:false,\r\n        formData:''\r\n    })\r\n    const {user , token} = isAuthenticate()\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories ,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values\r\n\r\n    const init = (productId) => {\r\n        getProduct(productId).then(data => {\r\n            if(data.error){\r\n                setValues({...values, error: data.error})\r\n            }else{\r\n                // populate the state\r\n                setValues({...values, name: data.name, description: data.description, price: data.price, category: data.category._id, shipping: data.shipping, quantity: data.quantity, formData: new FormData()})\r\n                // load categories\r\n                initCategory()\r\n            }\r\n        })\r\n    }\r\n\r\n    //load categories and set form data\r\n    const initCategory = () => {\r\n        getCategories().then(data => {\r\n            if(data.error){\r\n                setValues({...values,error:data.error})\r\n            }else{\r\n                setValues({ categories:data, formData:new FormData()})\r\n            }\r\n        })\r\n    }\r\n\r\n    //runs when there is a change in state\r\n    useEffect(() => {\r\n       init(match.params.productId)\r\n\r\n    },[])\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({...values, [name]:value})\r\n    }\r\n  \r\n    const clickSubmit = (event) => {\r\n        event.preventDefault() \r\n        setValues({...values,error:'',loading:true})\r\n        console.log( match.params.productId)\r\n        updateProduct( match.params.productId, user._id, token, formData)\r\n        .then(data => {\r\n            if(data.error){\r\n                setValues({...values, error:data.error})\r\n            }else {\r\n                setValues({\r\n                    ...values, name:'', description:'', photo:'', price:'', quantity:'', loading:false,redirectToProfile:true, createdProduct: data.name\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const newPostForm = () => {\r\n        return(\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Form</h4>\r\n            <div className='form-group'>\r\n                <label className='btn btn-secondary'>\r\n                    <input onChange={handleChange('photo')} type=\"file\" name='photo' accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')}  type=\"text\" className=\"form-control\" value={name}/>\r\n            </div>\r\n \r\n            <div className=\"form-group\">\r\n                <label className=\"\">Description</label>\r\n                <input onChange={handleChange('description')}  type=\"text\"  className=\"form-control\" value={description}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')}  type=\"number\"  className=\"form-control\" value={price}/>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')}  type=\"text\"  className=\"form-control\" >\r\n                    <option value=\"\">Please Select</option>\r\n                    {categories && categories.map((c , i) => (<option key={i} value={c._id}>{c.name}</option>))}\r\n                </select> \r\n            </div>\r\n \r\n            <div className=\"form-control\">\r\n                <label className=\"text-muted\">quantity</label>\r\n                <input onChange={handleChange('quantity')}  type=\"number\" className=\"form-control\" value={quantity}/>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label className=\"text-muted\">shipping</label>\r\n                <select onChange={handleChange('shipping')}  type=\"text\" className=\"form-control\">\r\n                    <option value=\"\">Please Select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">yes</option>\r\n                </select>\r\n            </div>\r\n            \r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}}>{error}</div>\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        <div className=\"alert alert-info\" style={{display: createdProduct ? '' : 'none'}}><h2>{`${createdProduct}`} is created</h2></div>\r\n        \r\n    }\r\n    const showLoading = () => {\r\n        loading && (<div className=\"alert alert-success\" style={{display: createdProduct ? '' : 'none'}}><h2>loading</h2></div>)\r\n    }\r\n\r\n\r\n    const redirectUser = () => {\r\n        if(redirectToProfile) {\r\n            if(!error) {\r\n                return <Redirect to=\"/\" />\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Add a new Product\" description={`Good Day ${user.name}`}>\r\n\r\n        <div className='row'>\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              {showLoading()}\r\n              {showSuccess()}\r\n              {showError()}\r\n              {newPostForm()}\r\n              {redirectUser()}\r\n            </div>\r\n\r\n        </div>\r\n    </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateProducts",{"ruleId":"228","severity":1,"message":"229","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":15},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"228","severity":1,"message":"236","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":14},{"ruleId":"228","severity":1,"message":"237","line":5,"column":9,"nodeType":"230","messageId":"231","endLine":5,"endColumn":13},{"ruleId":"228","severity":1,"message":"238","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":20},{"ruleId":"228","severity":1,"message":"239","line":16,"column":12,"nodeType":"230","messageId":"231","endLine":16,"endColumn":17},{"ruleId":"228","severity":1,"message":"240","line":17,"column":19,"nodeType":"230","messageId":"231","endLine":17,"endColumn":27},{"ruleId":"241","severity":1,"message":"242","line":71,"column":7,"nodeType":"243","endLine":71,"endColumn":9,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":78,"column":21,"nodeType":"247","messageId":"248","endLine":78,"endColumn":23},{"ruleId":"241","severity":1,"message":"249","line":29,"column":7,"nodeType":"243","endLine":29,"endColumn":9,"suggestions":"250"},{"ruleId":"228","severity":1,"message":"251","line":8,"column":18,"nodeType":"230","messageId":"231","endLine":8,"endColumn":21},{"ruleId":"228","severity":1,"message":"239","line":10,"column":12,"nodeType":"230","messageId":"231","endLine":10,"endColumn":17},{"ruleId":"228","severity":1,"message":"238","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":20},{"ruleId":"228","severity":1,"message":"252","line":4,"column":26,"nodeType":"230","messageId":"231","endLine":4,"endColumn":40},{"ruleId":"228","severity":1,"message":"253","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":17},{"ruleId":"228","severity":1,"message":"237","line":8,"column":9,"nodeType":"230","messageId":"231","endLine":8,"endColumn":13},{"ruleId":"228","severity":1,"message":"239","line":19,"column":12,"nodeType":"230","messageId":"231","endLine":19,"endColumn":17},{"ruleId":"228","severity":1,"message":"254","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":15},{"ruleId":"228","severity":1,"message":"255","line":3,"column":17,"nodeType":"230","messageId":"231","endLine":3,"endColumn":28},{"ruleId":"228","severity":1,"message":"237","line":6,"column":10,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"256","line":31,"column":9,"nodeType":"230","messageId":"231","endLine":31,"endColumn":17},{"ruleId":"228","severity":1,"message":"257","line":32,"column":9,"nodeType":"230","messageId":"231","endLine":32,"endColumn":17},{"ruleId":"228","severity":1,"message":"258","line":37,"column":9,"nodeType":"230","messageId":"231","endLine":37,"endColumn":26},{"ruleId":"241","severity":1,"message":"259","line":55,"column":7,"nodeType":"243","endLine":55,"endColumn":9,"suggestions":"260"},{"ruleId":"228","severity":1,"message":"261","line":1,"column":15,"nodeType":"230","messageId":"231","endLine":1,"endColumn":24},{"ruleId":"228","severity":1,"message":"261","line":1,"column":15,"nodeType":"230","messageId":"231","endLine":1,"endColumn":24},{"ruleId":"228","severity":1,"message":"262","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"262","line":1,"column":24,"nodeType":"230","messageId":"231","endLine":1,"endColumn":33},{"ruleId":"228","severity":1,"message":"263","line":1,"column":34,"nodeType":"230","messageId":"231","endLine":1,"endColumn":42},{"ruleId":"228","severity":1,"message":"264","line":4,"column":12,"nodeType":"230","messageId":"231","endLine":4,"endColumn":17},{"ruleId":"228","severity":1,"message":"265","line":5,"column":41,"nodeType":"230","messageId":"231","endLine":5,"endColumn":47},{"ruleId":"228","severity":1,"message":"266","line":6,"column":10,"nodeType":"230","messageId":"231","endLine":6,"endColumn":22},{"ruleId":"267","severity":1,"message":"268","line":10,"column":84,"nodeType":"269","endLine":10,"endColumn":113},{"ruleId":"232","replacedBy":"270"},{"ruleId":"234","replacedBy":"271"},{"ruleId":"228","severity":1,"message":"272","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":62,"column":35,"nodeType":"275","messageId":"276","endLine":62,"endColumn":37},{"ruleId":"273","severity":1,"message":"274","line":81,"column":31,"nodeType":"275","messageId":"276","endLine":81,"endColumn":33},{"ruleId":"228","severity":1,"message":"238","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":20},{"ruleId":"228","severity":1,"message":"277","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":14},{"ruleId":"228","severity":1,"message":"265","line":6,"column":17,"nodeType":"230","messageId":"231","endLine":6,"endColumn":23},{"ruleId":"228","severity":1,"message":"272","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"238","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":20},{"ruleId":"228","severity":1,"message":"278","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"277","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"241","severity":1,"message":"279","line":40,"column":7,"nodeType":"243","endLine":40,"endColumn":9,"suggestions":"280"},{"ruleId":"228","severity":1,"message":"281","line":76,"column":13,"nodeType":"230","messageId":"231","endLine":76,"endColumn":21},{"ruleId":"228","severity":1,"message":"282","line":6,"column":9,"nodeType":"230","messageId":"231","endLine":6,"endColumn":22},{"ruleId":"228","severity":1,"message":"283","line":6,"column":23,"nodeType":"230","messageId":"231","endLine":6,"endColumn":36},{"ruleId":"228","severity":1,"message":"237","line":7,"column":10,"nodeType":"230","messageId":"231","endLine":7,"endColumn":14},{"ruleId":"241","severity":1,"message":"284","line":36,"column":8,"nodeType":"243","endLine":36,"endColumn":10,"suggestions":"285"},{"ruleId":"228","severity":1,"message":"237","line":4,"column":9,"nodeType":"230","messageId":"231","endLine":4,"endColumn":13},{"ruleId":"228","severity":1,"message":"239","line":20,"column":35,"nodeType":"230","messageId":"231","endLine":20,"endColumn":40},{"ruleId":"241","severity":1,"message":"286","line":36,"column":7,"nodeType":"243","endLine":36,"endColumn":9,"suggestions":"287"},{"ruleId":"228","severity":1,"message":"288","line":61,"column":14,"nodeType":"230","messageId":"231","endLine":61,"endColumn":24},{"ruleId":"228","severity":1,"message":"289","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":19},{"ruleId":"228","severity":1,"message":"282","line":5,"column":9,"nodeType":"230","messageId":"231","endLine":5,"endColumn":22},{"ruleId":"228","severity":1,"message":"283","line":5,"column":23,"nodeType":"230","messageId":"231","endLine":5,"endColumn":36},{"ruleId":"228","severity":1,"message":"290","line":7,"column":9,"nodeType":"230","messageId":"231","endLine":7,"endColumn":19},{"ruleId":"228","severity":1,"message":"291","line":7,"column":46,"nodeType":"230","messageId":"231","endLine":7,"endColumn":59},{"ruleId":"228","severity":1,"message":"292","line":13,"column":27,"nodeType":"230","messageId":"231","endLine":13,"endColumn":31},{"ruleId":"228","severity":1,"message":"293","line":13,"column":33,"nodeType":"230","messageId":"231","endLine":13,"endColumn":38},{"ruleId":"228","severity":1,"message":"294","line":13,"column":40,"nodeType":"230","messageId":"231","endLine":13,"endColumn":44},{"ruleId":"228","severity":1,"message":"237","line":6,"column":10,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"256","line":31,"column":9,"nodeType":"230","messageId":"231","endLine":31,"endColumn":17},{"ruleId":"228","severity":1,"message":"257","line":32,"column":9,"nodeType":"230","messageId":"231","endLine":32,"endColumn":17},{"ruleId":"241","severity":1,"message":"295","line":69,"column":7,"nodeType":"243","endLine":69,"endColumn":9,"suggestions":"296"},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["297"],"no-negated-in-lhs",["298"],"'NavBar' is defined but never used.","'Link' is defined but never used.","'getProducts' is defined but never used.","'error' is assigned a value but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["299"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.",["300"],"'_id' is assigned a value but never used.","'shouldRedirect' is defined but never used.","'ShowImage' is defined but never used.","'signin' is defined but never used.","'authenicate' is defined but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["301"],"'Component' is defined but never used.","'useEffect' is defined but never used.","'Fragment' is defined but never used.","'value' is assigned a value but never used.","'ddItem' is defined but never used.","'updateLocale' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["297"],["298"],"'Layout' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Search' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["302"],"'getNonce' is assigned a value but never used.","'createProduct' is defined but never used.","'getCategories' is defined but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValue'. Either include them or remove the dependency array.",["303"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["304"],"'myFunction' is defined but never used.","'queryString' is defined but never used.","'getProduct' is defined but never used.","'updateProduct' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'role' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["305"],"no-global-assign","no-unsafe-negation",{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"320","text":"321"},"Update the dependencies array to be: [_id, token]",{"range":"322","text":"323"},"Update the dependencies array to be: [init]",{"range":"324","text":"325"},"Update the dependencies array to be: [token, userId]",{"range":"326","text":"327"},"Update the dependencies array to be: [loadOrders, loadStatusValue]",{"range":"328","text":"329"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"330","text":"331"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"332","text":"333"},[2148,2150],"[limit, loadFilteredResults, myFilters.filters, skip]",[767,769],"[_id, token]",[1369,1371],"[init]",[1238,1240],"[token, userId]",[1092,1094],"[loadOrders, loadStatusValue]",[937,939],"[init, match.params.userId]",[1967,1969],"[init, match.params.productId]"]